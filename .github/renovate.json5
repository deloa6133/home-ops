{
    "extends": [
        "config:base",
        "docker:enableMajor",
        ":disableRateLimiting",
        ":dependencyDashboard",
        ":semanticCommits",
        ":enablePreCommit",
        ":automergeDigest",
        ":automergeBranchPush",
        "github>deloa6133/home-ops//.github/renovate/allowedVersions.json5",
        "github>deloa6133/home-ops//.github/renovate/autoMerge.json5",
        "github>deloa6133/home-ops//.github/renovate/commitMessage.json5",
        "github>deloa6133/home-ops//.github/renovate/groups.json5",
        "github>deloa6133/home-ops//.github/renovate/labels.json5",
        "github>deloa6133/home-ops//.github/renovate/semanticCommits.json5"
    ],
    "platform": "github",
    "username": "renovate-bot[bot]",
    "repositories": ["deloa6133/home-ops"],
    "onboarding": false,
    "requireConfig": false,
    "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
    "suppressNotifications": ["prIgnoreNotification"],
    "rebaseWhen": "conflicted",
    "commitBodyTable": true,
    "ignorePaths": ["archive/**"],
    "docker-compose": {
        "fileMatch": ["ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"]
    },
    "flux": {
        "fileMatch": ["cluster/.+\\.ya?ml$"]
    },
    "helm-values": {
        "fileMatch": ["cluster/.+\\.ya?ml$"]
    },
    "kubernetes": {
        "fileMatch": ["cluster/.+\\.ya?ml$"]
    },
    "regexManagers": [
        {
            "description": "Process CRD dependencies",
            "fileMatch": ["cluster/.+\\.ya?ml$"],
            "matchStrings": [
                // GitRepository where 'Git release/tag' matches 'Helm' version
                "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
                // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
                "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
            ],
            "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
        },
        {
            "description": "Process various dependencies",
            "fileMatch": [
                "ansible/.+\\.ya?ml$",
                "cluster/.+\\.ya?ml$"
            ],
            "matchStrings": [
                "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
            ],
            "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
        },
        {
            "description": "Process raw GitHub URLs",
            "fileMatch": ["cluster/.+\\.ya?ml$"],
            "matchStrings": [
                "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*"
            ],
            "datasourceTemplate": "github-releases",
            "versioningTemplate": "semver"
        }
    ],
    "packageRules": [
        // setup datasources
        {
            "matchDatasources": ["helm"],
            "separateMinorPatch": true,
            "ignoreDeprecated": true
        },
        // global docker datasource settings
        {
            "matchDatasources": ["docker"],
            "enabled": true,
            "commitMessageTopic": "container image {{depName}}",
            "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
            "matchUpdateTypes": ["major", "minor", "patch"]
        },
        {
            "description": "Group Cert-Manager image (for CRDs) and chart",
            "groupName": "Cert-Manager",
            "matchPackagePatterns": ["cert-manager"],
            "matchDatasources": ["docker", "helm"],
            "group": { "commitMessageTopic": "{{{groupName}}} group" },
            "separateMinorPatch": true
        },
        // add labels according to package and update types
        {
            "matchDatasources": ["docker"],
            "matchUpdateTypes": ["major"],
            "labels": ["renovate/image", "dep/major"]
        },
        {
            "matchDatasources": ["docker"],
            "matchUpdateTypes": ["minor"],
            "labels": ["renovate/image", "dep/minor"]
        },
        {
            "matchDatasources": ["docker"],
            "matchUpdateTypes": ["patch"],
            "labels": ["renovate/image", "dep/patch"]
        },
        {
            "matchDatasources": ["helm"],
            "matchUpdateTypes": ["major"],
            "labels": ["renovate/helm", "dep/major"]
        },
        {
            "matchDatasources": ["helm"],
            "matchUpdateTypes": ["minor"],
            "labels": ["renovate/helm", "dep/minor"]
        },
        {
            "matchDatasources": ["helm"],
            "matchUpdateTypes": ["patch"],
            "labels": ["renovate/helm", "dep/patch"]
        }
    ]
}
